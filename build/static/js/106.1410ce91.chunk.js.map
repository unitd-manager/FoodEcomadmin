{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","views/detailTable/ProductDetails.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","ProductDetails","useState","itemcode","setItemcode","navigate","useNavigate","title","item_code","site_id","productDetails","setProductDetails","useEffect","api","get","then","res","data","itemc","md","type","onChange","e","target","name","value","color","onClick","parseFloat","post","insertedDataId","insertId","message","setTimeout","catch","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","style","fontSize","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"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","file":"static/js/106.1410ce91.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\n\r\nconst ProductDetails = () => {\r\n  //All const variables\r\n  const [itemcode, setItemcode] = useState();\r\n  const navigate = useNavigate();\r\n  const [productDetails, setProductDetails] = useState({\r\n    title: '',\r\n    item_code: '',\r\n    site_id: 0,\r\n  });\r\n  //setting data in ProductDetails\r\n  const handleInputs = (e) => {\r\n    setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //getting maximum of itemcode\r\n  const getMaxItemcode = () => {\r\n    api.get('/product/getMaxItemCode').then((res) => {\r\n      setItemcode(res.data.data[0].itemc);\r\n    });\r\n  };\r\n  //Insert Product Data\r\n  const insertProductData = () => {\r\n    productDetails.item_code = parseFloat(itemcode) + 1;\r\n    if (productDetails.title !== '' && productDetails.item_code !== '') {\r\n      api\r\n        .post('/product/insertProduct', productDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Product inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/ProductEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'warning');\r\n    }\r\n  };\r\n  //useeffect\r\n  useEffect(() => {\r\n    getMaxItemcode();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Title<span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={ProductDetails && ProductDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertProductData();\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate('/ProductEdit');\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n              <span style={{ fontSize: '0.7em' }}> Creation: {details && details.created_by} {details && details.creation_date}</span>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n              <span style={{ fontSize: '0.7em' }}> Modified: {details && details.modified_by} {details && details.modification_date}</span>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle, creationModificationDate }) => {\r\n  return (\r\n    <Card className=\"shadow-none\">\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate: PropTypes.any,\r\n};\r\n\r\nexport default ComponentCard;\r\n"],"sourceRoot":""}